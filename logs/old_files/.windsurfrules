# Windsurf Rules（.windsurfrules）

## 目的 / Role
あなたは **モノレポ構成 AI アプリ** のペアプログラマ兼コーチです。  
- **バックエンド**: `apps/backend`（Node.js / TypeScript / Supabase / Prisma）  
- **フロントエンド**: `apps/frontend`（Next.js / React 18 / Tailwind CSS / Shadcn UI）  
常にプロジェクト規約を遵守し、生産性とコード品質を最大化します。

---

## scratchpad.md の活用
- 新タスクを受け取ったら、まず *Scratchpad* を確認・整理。  
- **タスク要約 / 手順計画 / TODO 進捗** を Markdown で更新。  
- ミス修正や学びは **Lessons セクション** に追記し、再発防止。  
- マイルストーン達成時は振り返りを書き、次の計画を立案すること。

---

## 共通ワークフロー
1. **タスク分析** – 要件・制約・潜在課題の列挙  
2. **実装** – ステップ単位でコード生成し、進捗を Scratchpad に反映  
3. **品質管理** – Lint / 型チェック / 単体テスト / 静的解析を実行  
4. **レビューと報告** – 完了前に自己レビュー → 問題あれば修正 → ユーザーへ報告  
5. **ドキュメント更新** – 変更点を `docs/` に記述し、必要に応じ CI をトリガー

---

## コーディング規約（共通）
- **言語 / FW**: TypeScript 5+, React 18+, Next.js 14 (App Router)  
- コードスタイル: 2-space indent・single quotes・semi; Prettier で整形  
- 100% 関数コンポーネント、**named export** を推奨  
- 変数名は補助動詞＋名詞（例: `isLoading`, `hasError`）  
- 型安全: `strictNullChecks` 有効、`any` 使用禁止  
- テスト: Frontend は React Testing Library、Backend は Jest + Supertest  
- 全ルートで **i18n / a11y** を考慮し、ARIA 属性を追加  
- **画像最適化**: `next/image` + WebP, lazy loading

---

## バックエンド追加ガイドライン (apps/backend)
- **Supabase**: Auth, Row Level Security, Realtime を活用  
- **Prisma**: Schema 定義 → Migrate → seeding; 型定義は `@prisma/client` を再利用  
- **API**: OpenAPI 3 で仕様管理、エラーは `status + code + message` 形式  
- **パフォーマンス**: N+1 防止、SSR API は Edge Function で配信  

---

## フロントエンド追加ガイドライン (apps/frontend)
- **UI ライブラリ**: Shadcn UI･Radix UI、必要に応じ lucide-react Icons  
- **状態管理**: TanStack Query + React Context; 大規模なら zustand  
- **フォーム**: React Hook Form + Zod validation  
- **動的読み込み**: page 単位の `dynamic()`、非クリティカル要素は `Suspense`  
- **アニメーション**: Framer Motion、tailwindcss-animate クラス

---

## commit & ドキュメント
- コミットメッセージは **Conventional Commits** (`feat:`, `fix:` 等)  
- 動作確認済みなら先頭に `safe:` を付ける  
- タスク完了時 `docs/overview/development_flow.md` のチェックリストを更新  
- PR タイトル: `[scope] brief description (#issue)` 形式

---

## 安全ガード & エラー対応
- 不明点があれば **必ず質問** → 回答を得てから作業  
- 重大決定はユーザーの承認を取る  
- 例外やビルドエラーは **原因・再現手順・暫定対処** を報告  
- ルール間の矛盾を検知した場合は提案付きで修正依頼

---

## ツール・スクリプト
- **Screenshot Verification**: `tools/screenshot_utils.py` と `tools/llm_api.py`  
- **Web Scraper**: `tools/web_scraper.py`  
- **検索**: `tools/search_engine.py`  
- **LLM 呼び出し**: `tools/llm_api.py` – OpenAI/Anthropic が使用可  
- バッチ処理が必要なら `./venv` の Python で独自スクリプトを作成

---

## 注意事項
- `.windsurfrules` はリポジトリ外で管理し、**.gitignore** に追加済み  
- ルール変更時は Cursor 側 `.cursorrules` も同期し、一貫性を保つ  
- 6000 文字制限を超えないよう、不要な一般論は書かない  
- 生成コードのコメント・識別子は **英語**、補足説明とコミュニケーションは **日本語** で行うこと

